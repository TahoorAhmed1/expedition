{"clientVersion":"5.5.0","level":"error","message":"google OAuth error -->  \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:59:46\n\n  56 }\n  57 \n  58 // if user does not exist\n→ 59 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true\n           }\n         },\n     +   phoneNumber: String\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `phoneNumber` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:59:46\n\n  56 }\n  57 \n  58 // if user does not exist\n→ 59 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true\n           }\n         },\n     +   phoneNumber: String\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `phoneNumber` is missing.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:59:27)"}
{"clientVersion":"5.5.0","level":"error","message":"google OAuth error -->  \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:46\n\n  60 }\n  61 \n  62 // if user does not exist\n→ 63 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true\n           }\n         },\n     +   phoneNumber: String\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `phoneNumber` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:46\n\n  60 }\n  61 \n  62 // if user does not exist\n→ 63 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true\n           }\n         },\n     +   phoneNumber: String\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `phoneNumber` is missing.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:27)"}
{"clientVersion":"5.5.0","level":"error","message":"google OAuth error -->  \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:46\n\n  60 }\n  61 \n  62 // if user does not exist\n→ 63 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true\n           }\n         },\n     +   phoneNumber: String\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `phoneNumber` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:46\n\n  60 }\n  61 \n  62 // if user does not exist\n→ 63 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true\n           }\n         },\n     +   phoneNumber: String\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `phoneNumber` is missing.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:27)"}
{"clientVersion":"5.5.0","level":"error","message":"google OAuth error -->  \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:46\n\n  60 }\n  61 \n  62 // if user does not exist\n→ 63 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true,\n     +       password: String\n           }\n         }\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `password` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:46\n\n  60 }\n  61 \n  62 // if user does not exist\n→ 63 const newUser = await prisma.users.create({\n       data: {\n         name: \"Abrar Ali\",\n         email: \"abrar.internativelabs@gmail.com\",\n         profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n         authentication: {\n           create: {\n             provider: \"google\",\n             isEmailVerified: true,\n     +       password: String\n           }\n         }\n       },\n       select: {\n         id: true\n       }\n     })\n\nArgument `password` is missing.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:63:27)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:4:37)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:80:37)"}
{"clientVersion":"5.5.0","level":"error","message":"google OAuth error -->  \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:37:32\n\n  34 \n  35 // user exists but email is not verified\n  36 if (user && !user.authentication.isEmailVerified) {\n→ 37   await prisma.users.update({\n         where: {\n           id: 1\n         },\n         data: {\n           profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n           authentication: {\n             update: {\n               data: {\n                 isEmailVerified: true,\n                 provider: \"google\"\n               },\n       +       where: {\n       +         id: Int,\n       +         userId: Int,\n       +         AND: AuthenticationWhereInput | AuthenticationWhereInput[],\n       +         OR: AuthenticationWhereInput[],\n       +         NOT: AuthenticationWhereInput | AuthenticationWhereInput[],\n       +         isEmailVerified: BoolFilter | Boolean,\n       +         isPhoneNumberVerified: BoolFilter | Boolean,\n       +         password: StringNullableFilter | String | Null,\n       +         provider: StringNullableFilter | String | Null,\n       +         emailOtp: StringNullableFilter | String | Null,\n       +         phoneNumberOtp: StringNullableFilter | String | Null,\n       +         updatedAt: DateTimeFilter | DateTime,\n       +         user: UsersRelationFilter | UsersWhereInput\n       +       }\n             }\n           }\n         }\n       })\n\nArgument `where` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\configs\\OAuth\\google.passport.js:37:32\n\n  34 \n  35 // user exists but email is not verified\n  36 if (user && !user.authentication.isEmailVerified) {\n→ 37   await prisma.users.update({\n         where: {\n           id: 1\n         },\n         data: {\n           profilePicture: \"https://lh3.googleusercontent.com/a/ACg8ocJlzvuXDl35cnuxr7VIQUm80eUI6f2HSE-LKb362UDK=s96-c\",\n           authentication: {\n             update: {\n               data: {\n                 isEmailVerified: true,\n                 provider: \"google\"\n               },\n       +       where: {\n       +         id: Int,\n       +         userId: Int,\n       +         AND: AuthenticationWhereInput | AuthenticationWhereInput[],\n       +         OR: AuthenticationWhereInput[],\n       +         NOT: AuthenticationWhereInput | AuthenticationWhereInput[],\n       +         isEmailVerified: BoolFilter | Boolean,\n       +         isPhoneNumberVerified: BoolFilter | Boolean,\n       +         password: StringNullableFilter | String | Null,\n       +         provider: StringNullableFilter | String | Null,\n       +         emailOtp: StringNullableFilter | String | Null,\n       +         phoneNumberOtp: StringNullableFilter | String | Null,\n       +         updatedAt: DateTimeFilter | DateTime,\n       +         user: UsersRelationFilter | UsersWhereInput\n       +       }\n             }\n           }\n         }\n       })\n\nArgument `where` is missing.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:37:13)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:4:37)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:57:39)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:4:37)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:57:39)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:4:37)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:58:39)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:4:37)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:59:39)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:4:37)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:33:39)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:5:21)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:33:39)"}
{"level":"error","message":"google OAuth error -->  secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (D:\\traders-2.0\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at Object.createToken (D:\\traders-2.0\\services\\auth.service.js:6:21)\n    at Strategy._verify (D:\\traders-2.0\\configs\\OAuth\\google.passport.js:31:39)"}
{"clientVersion":"5.5.0","level":"error","message":"signup error -->  \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:25:37\n\n  22 const hashedPassword = authService.hashPassword(password);\n  23 const emailOTP = authService.generateOTP();\n  24 \n→ 25 const user = await prisma.users.create({\n       data: {\n         name: \"Abrar\",\n         email: \"abrar.internativelabs@gmail.com\",\n         phoneNumber: \"12345678\",\n         authentication: {\n           create: {\n             password: {},\n                       ~~\n             emailOtp: \"180080\"\n           }\n         }\n       }\n     })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:25:37\n\n  22 const hashedPassword = authService.hashPassword(password);\n  23 const emailOTP = authService.generateOTP();\n  24 \n→ 25 const user = await prisma.users.create({\n       data: {\n         name: \"Abrar\",\n         email: \"abrar.internativelabs@gmail.com\",\n         phoneNumber: \"12345678\",\n         authentication: {\n           create: {\n             password: {},\n                       ~~\n             emailOtp: \"180080\"\n           }\n         }\n       }\n     })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async signup (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:25:18)"}
{"clientVersion":"5.5.0","level":"error","message":"signup error -->  \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:22:37\n\n  19 console.log(hashedPassword);\n  20 const emailOTP = authService.generateOTP();\n  21 \n→ 22 const user = await prisma.users.create({\n       data: {\n         name: \"Abrar\",\n         email: \"abrar.internativelabs@gmail.com\",\n         phoneNumber: \"12345678\",\n         authentication: {\n           create: {\n             password: {},\n                       ~~\n             emailOtp: \"541779\"\n           }\n         }\n       }\n     })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.create()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:22:37\n\n  19 console.log(hashedPassword);\n  20 const emailOTP = authService.generateOTP();\n  21 \n→ 22 const user = await prisma.users.create({\n       data: {\n         name: \"Abrar\",\n         email: \"abrar.internativelabs@gmail.com\",\n         phoneNumber: \"12345678\",\n         authentication: {\n           create: {\n             password: {},\n                       ~~\n             emailOtp: \"541779\"\n           }\n         }\n       }\n     })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async signup (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:22:18)"}
{"clientVersion":"5.5.0","level":"error","message":"resetPassword error -->  \nInvalid `prisma.authentication.findUnique()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:387:46\n\n  384 const { otp } = req.body;\n  385 const { userId, type } = req.user;\n  386 try {\n→ 387   const user = await prisma.authentication.findUnique({\n          where: {\n            userId: undefined,\n        ?   id?: Int,\n        ?   AND?: AuthenticationWhereInput | AuthenticationWhereInput[],\n        ?   OR?: AuthenticationWhereInput[],\n        ?   NOT?: AuthenticationWhereInput | AuthenticationWhereInput[],\n        ?   isEmailVerified?: BoolFilter | Boolean,\n        ?   isPhoneNumberVerified?: BoolFilter | Boolean,\n        ?   password?: StringNullableFilter | String | Null,\n        ?   provider?: StringNullableFilter | String | Null,\n        ?   emailOtp?: StringNullableFilter | String | Null,\n        ?   phoneNumberOtp?: StringNullableFilter | String | Null,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   user?: UsersRelationFilter | UsersWhereInput\n          },\n          select: {\n            emailOtp: true,\n            isEmailVerified: true,\n            updatedAt: true\n          }\n        })\n\nArgument `where` of type AuthenticationWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.authentication.findUnique()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:387:46\n\n  384 const { otp } = req.body;\n  385 const { userId, type } = req.user;\n  386 try {\n→ 387   const user = await prisma.authentication.findUnique({\n          where: {\n            userId: undefined,\n        ?   id?: Int,\n        ?   AND?: AuthenticationWhereInput | AuthenticationWhereInput[],\n        ?   OR?: AuthenticationWhereInput[],\n        ?   NOT?: AuthenticationWhereInput | AuthenticationWhereInput[],\n        ?   isEmailVerified?: BoolFilter | Boolean,\n        ?   isPhoneNumberVerified?: BoolFilter | Boolean,\n        ?   password?: StringNullableFilter | String | Null,\n        ?   provider?: StringNullableFilter | String | Null,\n        ?   emailOtp?: StringNullableFilter | String | Null,\n        ?   phoneNumberOtp?: StringNullableFilter | String | Null,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   user?: UsersRelationFilter | UsersWhereInput\n          },\n          select: {\n            emailOtp: true,\n            isEmailVerified: true,\n            updatedAt: true\n          }\n        })\n\nArgument `where` of type AuthenticationWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async verifyOtp (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:387:18)"}
{"clientVersion":"5.5.0","level":"error","message":"verifyEmail error -->  \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:24\n\n  256   return res.status(response.status.code).json(response);\n  257 }\n  258 \n→ 259 await prisma.users.update({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   phoneNumber?: String,\n      ?   AND?: UsersWhereInput | UsersWhereInput[],\n      ?   OR?: UsersWhereInput[],\n      ?   NOT?: UsersWhereInput | UsersWhereInput[],\n      ?   name?: StringFilter | String,\n      ?   profilePicture?: StringNullableFilter | String | Null,\n      ?   subscriptionId?: IntNullableFilter | Int | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   subscription?: SubscriptionsNullableRelationFilter | SubscriptionsWhereInput | Null,\n      ?   authentication?: AuthenticationNullableRelationFilter | AuthenticationWhereInput | Null,\n      ?   sessions?: SessionsListRelationFilter,\n      ?   subscriptions?: SubscriptionsListRelationFilter,\n      ?   userSubscriptionIds?: UserSubscriptionIdsListRelationFilter,\n      ?   paymentHistory?: PaymentHistoryListRelationFilter,\n      ?   userNotificationsHistory?: UserNotificationsHistoryListRelationFilter,\n      ?   userPreferences?: UserPreferencesListRelationFilter\n        },\n        data: {\n          authentication: {\n            update: {\n              isEmailVerified: true\n            }\n          }\n        }\n      })\n\nArgument `where` of type UsersWhereUniqueInput needs at least one of `id`, `email` or `phoneNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:24\n\n  256   return res.status(response.status.code).json(response);\n  257 }\n  258 \n→ 259 await prisma.users.update({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   phoneNumber?: String,\n      ?   AND?: UsersWhereInput | UsersWhereInput[],\n      ?   OR?: UsersWhereInput[],\n      ?   NOT?: UsersWhereInput | UsersWhereInput[],\n      ?   name?: StringFilter | String,\n      ?   profilePicture?: StringNullableFilter | String | Null,\n      ?   subscriptionId?: IntNullableFilter | Int | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   subscription?: SubscriptionsNullableRelationFilter | SubscriptionsWhereInput | Null,\n      ?   authentication?: AuthenticationNullableRelationFilter | AuthenticationWhereInput | Null,\n      ?   sessions?: SessionsListRelationFilter,\n      ?   subscriptions?: SubscriptionsListRelationFilter,\n      ?   userSubscriptionIds?: UserSubscriptionIdsListRelationFilter,\n      ?   paymentHistory?: PaymentHistoryListRelationFilter,\n      ?   userNotificationsHistory?: UserNotificationsHistoryListRelationFilter,\n      ?   userPreferences?: UserPreferencesListRelationFilter\n        },\n        data: {\n          authentication: {\n            update: {\n              isEmailVerified: true\n            }\n          }\n        }\n      })\n\nArgument `where` of type UsersWhereUniqueInput needs at least one of `id`, `email` or `phoneNumber` arguments. Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async verifyEmail (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:5)"}
{"clientVersion":"5.5.0","level":"error","message":"verifyEmail error -->  \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:24\n\n  256   return res.status(response.status.code).json(response);\n  257 }\n  258 \n→ 259 await prisma.users.update({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   phoneNumber?: String,\n      ?   AND?: UsersWhereInput | UsersWhereInput[],\n      ?   OR?: UsersWhereInput[],\n      ?   NOT?: UsersWhereInput | UsersWhereInput[],\n      ?   name?: StringFilter | String,\n      ?   profilePicture?: StringNullableFilter | String | Null,\n      ?   subscriptionId?: IntNullableFilter | Int | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   subscription?: SubscriptionsNullableRelationFilter | SubscriptionsWhereInput | Null,\n      ?   authentication?: AuthenticationNullableRelationFilter | AuthenticationWhereInput | Null,\n      ?   sessions?: SessionsListRelationFilter,\n      ?   subscriptions?: SubscriptionsListRelationFilter,\n      ?   userSubscriptionIds?: UserSubscriptionIdsListRelationFilter,\n      ?   paymentHistory?: PaymentHistoryListRelationFilter,\n      ?   userNotificationsHistory?: UserNotificationsHistoryListRelationFilter,\n      ?   userPreferences?: UserPreferencesListRelationFilter\n        },\n        data: {\n          authentication: {\n            update: {\n              data: {\n                isEmailVerified: true\n              },\n              where: {\n                userId: undefined\n              }\n            }\n          }\n        }\n      })\n\nArgument `where` of type UsersWhereUniqueInput needs at least one of `id`, `email` or `phoneNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:24\n\n  256   return res.status(response.status.code).json(response);\n  257 }\n  258 \n→ 259 await prisma.users.update({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   phoneNumber?: String,\n      ?   AND?: UsersWhereInput | UsersWhereInput[],\n      ?   OR?: UsersWhereInput[],\n      ?   NOT?: UsersWhereInput | UsersWhereInput[],\n      ?   name?: StringFilter | String,\n      ?   profilePicture?: StringNullableFilter | String | Null,\n      ?   subscriptionId?: IntNullableFilter | Int | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   subscription?: SubscriptionsNullableRelationFilter | SubscriptionsWhereInput | Null,\n      ?   authentication?: AuthenticationNullableRelationFilter | AuthenticationWhereInput | Null,\n      ?   sessions?: SessionsListRelationFilter,\n      ?   subscriptions?: SubscriptionsListRelationFilter,\n      ?   userSubscriptionIds?: UserSubscriptionIdsListRelationFilter,\n      ?   paymentHistory?: PaymentHistoryListRelationFilter,\n      ?   userNotificationsHistory?: UserNotificationsHistoryListRelationFilter,\n      ?   userPreferences?: UserPreferencesListRelationFilter\n        },\n        data: {\n          authentication: {\n            update: {\n              data: {\n                isEmailVerified: true\n              },\n              where: {\n                userId: undefined\n              }\n            }\n          }\n        }\n      })\n\nArgument `where` of type UsersWhereUniqueInput needs at least one of `id`, `email` or `phoneNumber` arguments. Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async verifyEmail (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:5)"}
{"clientVersion":"5.5.0","level":"error","message":"verifyEmail error -->  \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:24\n\n  256   return res.status(response.status.code).json(response);\n  257 }\n  258 \n→ 259 await prisma.users.update({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   phoneNumber?: String,\n      ?   AND?: UsersWhereInput | UsersWhereInput[],\n      ?   OR?: UsersWhereInput[],\n      ?   NOT?: UsersWhereInput | UsersWhereInput[],\n      ?   name?: StringFilter | String,\n      ?   profilePicture?: StringNullableFilter | String | Null,\n      ?   subscriptionId?: IntNullableFilter | Int | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   subscription?: SubscriptionsNullableRelationFilter | SubscriptionsWhereInput | Null,\n      ?   authentication?: AuthenticationNullableRelationFilter | AuthenticationWhereInput | Null,\n      ?   sessions?: SessionsListRelationFilter,\n      ?   subscriptions?: SubscriptionsListRelationFilter,\n      ?   userSubscriptionIds?: UserSubscriptionIdsListRelationFilter,\n      ?   paymentHistory?: PaymentHistoryListRelationFilter,\n      ?   userNotificationsHistory?: UserNotificationsHistoryListRelationFilter,\n      ?   userPreferences?: UserPreferencesListRelationFilter\n        },\n        data: {\n          authentication: {\n            update: {\n              data: {\n                isEmailVerified: true\n              },\n              where: {\n                userId: undefined\n              }\n            }\n          }\n        }\n      })\n\nArgument `where` of type UsersWhereUniqueInput needs at least one of `id`, `email` or `phoneNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:24\n\n  256   return res.status(response.status.code).json(response);\n  257 }\n  258 \n→ 259 await prisma.users.update({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   phoneNumber?: String,\n      ?   AND?: UsersWhereInput | UsersWhereInput[],\n      ?   OR?: UsersWhereInput[],\n      ?   NOT?: UsersWhereInput | UsersWhereInput[],\n      ?   name?: StringFilter | String,\n      ?   profilePicture?: StringNullableFilter | String | Null,\n      ?   subscriptionId?: IntNullableFilter | Int | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   subscription?: SubscriptionsNullableRelationFilter | SubscriptionsWhereInput | Null,\n      ?   authentication?: AuthenticationNullableRelationFilter | AuthenticationWhereInput | Null,\n      ?   sessions?: SessionsListRelationFilter,\n      ?   subscriptions?: SubscriptionsListRelationFilter,\n      ?   userSubscriptionIds?: UserSubscriptionIdsListRelationFilter,\n      ?   paymentHistory?: PaymentHistoryListRelationFilter,\n      ?   userNotificationsHistory?: UserNotificationsHistoryListRelationFilter,\n      ?   userPreferences?: UserPreferencesListRelationFilter\n        },\n        data: {\n          authentication: {\n            update: {\n              data: {\n                isEmailVerified: true\n              },\n              where: {\n                userId: undefined\n              }\n            }\n          }\n        }\n      })\n\nArgument `where` of type UsersWhereUniqueInput needs at least one of `id`, `email` or `phoneNumber` arguments. Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async verifyEmail (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:259:5)"}
{"level":"error","message":"Error sending reset password email transporter.sendMail is not a function","stack":"TypeError: transporter.sendMail is not a function\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:14:23)\n    at forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:11)"}
{"level":"error","message":"forgotPassword error -->  Error sending reset password email","stack":"Error: Error sending reset password email\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:17:11)\n    at forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:11)"}
{"level":"error","message":"Error sending reset password email transporter.sendMail is not a function","stack":"TypeError: transporter.sendMail is not a function\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:14:23)\n    at forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:11)"}
{"level":"error","message":"forgotPassword error -->  Error sending reset password email","stack":"Error: Error sending reset password email\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:17:11)\n    at forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:11)"}
{"level":"error","message":"Error sending reset password email transporter.sendMail is not a function","stack":"TypeError: transporter.sendMail is not a function\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:13:23)\n    at forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:11)"}
{"level":"error","message":"forgotPassword error -->  Error sending reset password email","stack":"Error: Error sending reset password email\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:16:11)\n    at forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:11)"}
{"level":"error"}
{"level":"error","message":"Error sending reset password email Unexpected socket close","stack":"Error: Unexpected socket close\n    at Timeout._onTimeout (D:\\traders-2.0\\node_modules\\nodemailer\\lib\\smtp-transport\\index.js:190:31)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)"}
{"level":"error","message":"forgotPassword error -->  Error sending reset password email","stack":"Error: Error sending reset password email\n    at sendResetPasswordEmail (D:\\traders-2.0\\emails\\email-resetPassword.js:17:11)\n    at async forgotPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:132:5)"}
{"clientVersion":"5.5.0","level":"error","message":"resetPassword error -->  \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:156:24\n\n  153 \n  154 const hashedPassword = await authService.hashPassword(password);\n  155 \n→ 156 await prisma.users.update({\n        where: {\n          id: 2\n        },\n        data: {\n          password: \"$2a$10$NsfPSdBBHQckfOXGl1uDbeTDCWgkwRZ3RMtHRrE0VbgHhu.E0mJ.K\",\n          ~~~~~~~~\n      ?   name?: String | StringFieldUpdateOperationsInput,\n      ?   email?: String | StringFieldUpdateOperationsInput,\n      ?   phoneNumber?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   profilePicture?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   subscription?: SubscriptionsUpdateOneWithoutUsersNestedInput,\n      ?   authentication?: AuthenticationUpdateOneWithoutUserNestedInput,\n      ?   sessions?: SessionsUpdateManyWithoutUserNestedInput,\n      ?   subscriptions?: SubscriptionsUpdateManyWithoutUserNestedInput,\n      ?   userSubscriptionIds?: UserSubscriptionIdsUpdateManyWithoutUserNestedInput,\n      ?   paymentHistory?: PaymentHistoryUpdateManyWithoutUserNestedInput,\n      ?   userNotificationsHistory?: UserNotificationsHistoryUpdateManyWithoutUserNestedInput,\n      ?   userPreferences?: UserPreferencesUpdateManyWithoutUserNestedInput\n        }\n      })\n\nUnknown argument `password`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:156:24\n\n  153 \n  154 const hashedPassword = await authService.hashPassword(password);\n  155 \n→ 156 await prisma.users.update({\n        where: {\n          id: 2\n        },\n        data: {\n          password: \"$2a$10$NsfPSdBBHQckfOXGl1uDbeTDCWgkwRZ3RMtHRrE0VbgHhu.E0mJ.K\",\n          ~~~~~~~~\n      ?   name?: String | StringFieldUpdateOperationsInput,\n      ?   email?: String | StringFieldUpdateOperationsInput,\n      ?   phoneNumber?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   profilePicture?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   subscription?: SubscriptionsUpdateOneWithoutUsersNestedInput,\n      ?   authentication?: AuthenticationUpdateOneWithoutUserNestedInput,\n      ?   sessions?: SessionsUpdateManyWithoutUserNestedInput,\n      ?   subscriptions?: SubscriptionsUpdateManyWithoutUserNestedInput,\n      ?   userSubscriptionIds?: UserSubscriptionIdsUpdateManyWithoutUserNestedInput,\n      ?   paymentHistory?: PaymentHistoryUpdateManyWithoutUserNestedInput,\n      ?   userNotificationsHistory?: UserNotificationsHistoryUpdateManyWithoutUserNestedInput,\n      ?   userPreferences?: UserPreferencesUpdateManyWithoutUserNestedInput\n        }\n      })\n\nUnknown argument `password`. Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async resetPassword (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:156:5)"}
{"clientVersion":"5.5.0","code":"P2025","level":"error","message":"logout error -->  \nInvalid `prisma.sessions.delete()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:181:48\n\n  178 const logout = async (req, res) => {\n  179   const { sessionId } = req.user;\n  180   try {\n→ 181     const result = await prisma.sessions.delete(\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","meta":{"cause":"Record to delete does not exist."},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.sessions.delete()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:181:48\n\n  178 const logout = async (req, res) => {\n  179   const { sessionId } = req.user;\n  180   try {\n→ 181     const result = await prisma.sessions.delete(\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async logout (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:181:20)"}
{"clientVersion":"5.5.0","level":"error","message":"login error -->  \nInvalid `prisma.sessions.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:221:42\n\n  218 const { ip } = req;\n  219 \n  220 try {\n→ 221   const result = await prisma.sessions.update({\n          where: {\n            id: 14\n          },\n          data: {\n            deviceId: \"abcd\",\n            browser: \"Other\",\n            os: \"Other\",\n            device_type: \"phone\",\n            ~~~~~~~~~~~\n            ip: \"::1\",\n        ?   deviceType?: String | NullableStringFieldUpdateOperationsInput | Null,\n        ?   ipAddress?: String | NullableStringFieldUpdateOperationsInput | Null,\n        ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n        ?   user?: UsersUpdateOneRequiredWithoutSessionsNestedInput\n          }\n        })\n\nUnknown argument `device_type`. Did you mean `deviceType`? Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.sessions.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:221:42\n\n  218 const { ip } = req;\n  219 \n  220 try {\n→ 221   const result = await prisma.sessions.update({\n          where: {\n            id: 14\n          },\n          data: {\n            deviceId: \"abcd\",\n            browser: \"Other\",\n            os: \"Other\",\n            device_type: \"phone\",\n            ~~~~~~~~~~~\n            ip: \"::1\",\n        ?   deviceType?: String | NullableStringFieldUpdateOperationsInput | Null,\n        ?   ipAddress?: String | NullableStringFieldUpdateOperationsInput | Null,\n        ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n        ?   user?: UsersUpdateOneRequiredWithoutSessionsNestedInput\n          }\n        })\n\nUnknown argument `device_type`. Did you mean `deviceType`? Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async registerDevice (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:221:20)"}
{"clientVersion":"5.5.0","level":"error","message":"login error -->  \nInvalid `prisma.sessions.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:226:42\n\n  223 console.log(parser);\n  224 console.log(type);\n  225 console.log(ip);\n→ 226 const result = await prisma.sessions.update({\n        where: {\n          id: 14\n        },\n        data: {\n          deviceId: \"abcd\",\n          browser: \"Other\",\n          os: \"Other\",\n          device_type: \"phone\",\n          ~~~~~~~~~~~\n          ip: \"::1\",\n      ?   deviceType?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   ipAddress?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   user?: UsersUpdateOneRequiredWithoutSessionsNestedInput\n        }\n      })\n\nUnknown argument `device_type`. Did you mean `deviceType`? Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.sessions.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:226:42\n\n  223 console.log(parser);\n  224 console.log(type);\n  225 console.log(ip);\n→ 226 const result = await prisma.sessions.update({\n        where: {\n          id: 14\n        },\n        data: {\n          deviceId: \"abcd\",\n          browser: \"Other\",\n          os: \"Other\",\n          device_type: \"phone\",\n          ~~~~~~~~~~~\n          ip: \"::1\",\n      ?   deviceType?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   ipAddress?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   user?: UsersUpdateOneRequiredWithoutSessionsNestedInput\n        }\n      })\n\nUnknown argument `device_type`. Did you mean `deviceType`? Available options are marked with ?.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async registerDevice (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:226:20)"}
{"level":"error"}
{"level":"error","message":"verifyGoogleAndroidOAuth error --> Wrong number of segments in token: a","stack":"Error: Wrong number of segments in token: a\n    at OAuth2Client.verifySignedJwtWithCertsAsync (D:\\traders-2.0\\node_modules\\google-auth-library\\build\\src\\auth\\oauth2client.js:595:19)\n    at OAuth2Client.verifyIdTokenAsync (D:\\traders-2.0\\node_modules\\google-auth-library\\build\\src\\auth\\oauth2client.js:455:34)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async verifyGoogleAndroidOAuth (D:\\traders-2.0\\middleware\\oAuthGoogleMobile.js:15:20)"}
{"level":"error","message":"login error -->  Illegal arguments: string, object","stack":"Error: Illegal arguments: string, object\n    at _async (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:286:46)\n    at D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:307:17\n    at new Promise (<anonymous>)\n    at bcrypt.compare (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:306:20)\n    at Object.comparePasswords (D:\\traders-2.0\\services\\auth.service.js:27:32)\n    at login (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:87:43)"}
{"level":"error","message":"login error -->  Illegal arguments: string, object","stack":"Error: Illegal arguments: string, object\n    at _async (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:286:46)\n    at D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:307:17\n    at new Promise (<anonymous>)\n    at bcrypt.compare (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:306:20)\n    at Object.comparePasswords (D:\\traders-2.0\\services\\auth.service.js:27:32)\n    at login (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:87:43)"}
{"level":"error","message":"login error -->  Illegal arguments: string, object","stack":"Error: Illegal arguments: string, object\n    at _async (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:286:46)\n    at D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:307:17\n    at new Promise (<anonymous>)\n    at bcrypt.compare (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:306:20)\n    at Object.comparePasswords (D:\\traders-2.0\\services\\auth.service.js:27:32)\n    at login (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:83:43)"}
{"level":"error","message":"login error -->  Illegal arguments: string, object","stack":"Error: Illegal arguments: string, object\n    at _async (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:286:46)\n    at D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:307:17\n    at new Promise (<anonymous>)\n    at bcrypt.compare (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:306:20)\n    at Object.comparePasswords (D:\\traders-2.0\\services\\auth.service.js:27:32)\n    at login (D:\\traders-2.0\\controllers\\client\\user\\auth.controllers.js:83:43)"}
{"level":"error","message":"resetPassword error -->  password is not defined","stack":"ReferenceError: password is not defined\n    at updatePassword (D:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:115:9)\n    at Layer.handle [as handle_request] (D:\\traders-2.0\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\traders-2.0\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at D:\\traders-2.0\\middleware\\validateRequest.middleware.js:14:5\n    at Layer.handle [as handle_request] (D:\\traders-2.0\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\traders-2.0\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at authRequired (D:\\traders-2.0\\middleware\\authRequired.middleware.js:21:3)\n    at Layer.handle [as handle_request] (D:\\traders-2.0\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\traders-2.0\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (D:\\traders-2.0\\node_modules\\express\\lib\\router\\route.js:114:3)"}
{"clientVersion":"5.5.0","level":"error","message":"updatePassword error -->  \nInvalid `prisma.authentication.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:128:33\n\n  125 \n  126 const newHashedPassword = authService.hashPassword(newPassword);\n  127 \n→ 128 await prisma.authentication.update({\n        where: {\n          userId: 6\n        },\n        data: {\n          password: {}\n                    ~~\n        }\n      })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.authentication.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:128:33\n\n  125 \n  126 const newHashedPassword = authService.hashPassword(newPassword);\n  127 \n→ 128 await prisma.authentication.update({\n        where: {\n          userId: 6\n        },\n        data: {\n          password: {}\n                    ~~\n        }\n      })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updatePassword (D:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:128:5)"}
{"clientVersion":"5.5.0","level":"error","message":"updatePassword error -->  \nInvalid `prisma.authentication.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:129:33\n\n  126 \n  127 const newHashedPassword = authService.hashPassword(newPassword);\n  128 \n→ 129 await prisma.authentication.update({\n        where: {\n          userId: 6\n        },\n        data: {\n          password: {}\n                    ~~\n        }\n      })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.authentication.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:129:33\n\n  126 \n  127 const newHashedPassword = authService.hashPassword(newPassword);\n  128 \n→ 129 await prisma.authentication.update({\n        where: {\n          userId: 6\n        },\n        data: {\n          password: {}\n                    ~~\n        }\n      })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updatePassword (D:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:129:5)"}
{"clientVersion":"5.5.0","level":"error","message":"updatePassword error -->  \nInvalid `prisma.authentication.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:129:33\n\n  126 \n  127 const newHashedPassword = authService.hashPassword(newPassword);\n  128 console.log(newHashedPassword);\n→ 129 await prisma.authentication.update({\n        where: {\n          userId: 6\n        },\n        data: {\n          password: {}\n                    ~~\n        }\n      })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.authentication.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:129:33\n\n  126 \n  127 const newHashedPassword = authService.hashPassword(newPassword);\n  128 console.log(newHashedPassword);\n→ 129 await prisma.authentication.update({\n        where: {\n          userId: 6\n        },\n        data: {\n          password: {}\n                    ~~\n        }\n      })\n\nArgument `password`: Invalid value provided. Expected String or Null, provided Object.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updatePassword (D:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:129:5)"}
{"level":"error","message":"updatePassword error -->  Illegal arguments: undefined, string","stack":"Error: Illegal arguments: undefined, string\n    at _async (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:286:46)\n    at D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:307:17\n    at new Promise (<anonymous>)\n    at bcrypt.compare (D:\\traders-2.0\\node_modules\\bcryptjs\\dist\\bcrypt.js:306:20)\n    at Object.comparePasswords (D:\\traders-2.0\\services\\auth.service.js:27:32)\n    at updatePassword (D:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:119:48)"}
{"clientVersion":"5.5.0","level":"error","message":"logoutFromADevice error -->  \nInvalid `prisma.sessions.deleteMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:197:42\n\n  194   return res.status(response.status.code).json(response);\n  195 }\n  196 \n→ 197 const result = await prisma.sessions.deleteMany({\n        where: {\n          id: \"31\"\n              ~~~~\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.sessions.deleteMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:197:42\n\n  194   return res.status(response.status.code).json(response);\n  195 }\n  196 \n→ 197 const result = await prisma.sessions.deleteMany({\n        where: {\n          id: \"31\"\n              ~~~~\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async logoutFromADevice (D:\\traders-2.0\\controllers\\client\\user\\profile.controllers.js:197:20)"}
{"clientVersion":"5.5.0","level":"error","message":"getSignals error -->  \nInvalid `prisma.signals.findMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:42\n\n  21 \n  22 if (showRestricted) delete filter.isRestrictedToUnpaidUsers;\n  23 \n→ 24 const signals = await prisma.signals.findMany({\n       where: {\n         type: \"swings\",\n               ~~~~~~~~\n         status: true,\n         isRestrictedToUnpaidUsers: true\n       },\n       take: 10,\n       skip: 0,\n       select: {\n         type: true,\n         status: true,\n         signalCode: {\n           select: {\n             code: true,\n             name: true,\n             image: true\n           }\n         },\n         signalHistory: {\n           take: 1,\n           orderBy: {\n             createdAt: \"desc\"\n           },\n           select: {\n             sellDate: true,\n             buyTarget: true,\n             stopTarget: true,\n             firstTarget: true,\n             secondTarget: true,\n             thirdTarget: true,\n             hasAchievedFirstTarget: true,\n             hasAchievedSecondTarget: true,\n             hasAchievedThirdTarget: true,\n             message: true\n           }\n         }\n       }\n     })\n\nInvalid value for argument `type`. Expected SIGNALS_TYPE.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.signals.findMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:42\n\n  21 \n  22 if (showRestricted) delete filter.isRestrictedToUnpaidUsers;\n  23 \n→ 24 const signals = await prisma.signals.findMany({\n       where: {\n         type: \"swings\",\n               ~~~~~~~~\n         status: true,\n         isRestrictedToUnpaidUsers: true\n       },\n       take: 10,\n       skip: 0,\n       select: {\n         type: true,\n         status: true,\n         signalCode: {\n           select: {\n             code: true,\n             name: true,\n             image: true\n           }\n         },\n         signalHistory: {\n           take: 1,\n           orderBy: {\n             createdAt: \"desc\"\n           },\n           select: {\n             sellDate: true,\n             buyTarget: true,\n             stopTarget: true,\n             firstTarget: true,\n             secondTarget: true,\n             thirdTarget: true,\n             hasAchievedFirstTarget: true,\n             hasAchievedSecondTarget: true,\n             hasAchievedThirdTarget: true,\n             message: true\n           }\n         }\n       }\n     })\n\nInvalid value for argument `type`. Expected SIGNALS_TYPE.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async getSignals (D:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:21)"}
{"clientVersion":"5.5.0","level":"error","message":"getSignals error -->  \nInvalid `prisma.signals.findMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:42\n\n  21 console.log(filter);\n  22 if (showRestricted) delete filter.isRestrictedToUnpaidUsers;\n  23 \n→ 24 const signals = await prisma.signals.findMany({\n       where: {\n         type: \"swings\",\n               ~~~~~~~~\n         status: true,\n         isRestrictedToUnpaidUsers: true\n       },\n       take: 10,\n       skip: 0,\n       select: {\n         type: true,\n         status: true,\n         signalCode: {\n           select: {\n             code: true,\n             name: true,\n             image: true\n           }\n         },\n         signalHistory: {\n           take: 1,\n           orderBy: {\n             createdAt: \"desc\"\n           },\n           select: {\n             sellDate: true,\n             buyTarget: true,\n             stopTarget: true,\n             firstTarget: true,\n             secondTarget: true,\n             thirdTarget: true,\n             hasAchievedFirstTarget: true,\n             hasAchievedSecondTarget: true,\n             hasAchievedThirdTarget: true,\n             message: true\n           }\n         }\n       }\n     })\n\nInvalid value for argument `type`. Expected SIGNALS_TYPE.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.signals.findMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:42\n\n  21 console.log(filter);\n  22 if (showRestricted) delete filter.isRestrictedToUnpaidUsers;\n  23 \n→ 24 const signals = await prisma.signals.findMany({\n       where: {\n         type: \"swings\",\n               ~~~~~~~~\n         status: true,\n         isRestrictedToUnpaidUsers: true\n       },\n       take: 10,\n       skip: 0,\n       select: {\n         type: true,\n         status: true,\n         signalCode: {\n           select: {\n             code: true,\n             name: true,\n             image: true\n           }\n         },\n         signalHistory: {\n           take: 1,\n           orderBy: {\n             createdAt: \"desc\"\n           },\n           select: {\n             sellDate: true,\n             buyTarget: true,\n             stopTarget: true,\n             firstTarget: true,\n             secondTarget: true,\n             thirdTarget: true,\n             hasAchievedFirstTarget: true,\n             hasAchievedSecondTarget: true,\n             hasAchievedThirdTarget: true,\n             message: true\n           }\n         }\n       }\n     })\n\nInvalid value for argument `type`. Expected SIGNALS_TYPE.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async getSignals (D:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:21)"}
{"clientVersion":"5.5.0","level":"error","message":"getSignals error -->  \nInvalid `prisma.signals.findMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:42\n\n  21 console.log(filter);\n  22 if (showRestricted) delete filter.isRestrictedToUnpaidUsers;\n  23 \n→ 24 const signals = await prisma.signals.findMany({\n       where: {\n         type: \"SWINGS\",\n         status: true,\n                 ~~~~\n         isRestrictedToUnpaidUsers: true\n       },\n       take: 10,\n       skip: 0,\n       select: {\n         type: true,\n         status: true,\n         signalCode: {\n           select: {\n             code: true,\n             name: true,\n             image: true\n           }\n         },\n         signalHistory: {\n           take: 1,\n           orderBy: {\n             createdAt: \"desc\"\n           },\n           select: {\n             sellDate: true,\n             buyTarget: true,\n             stopTarget: true,\n             firstTarget: true,\n             secondTarget: true,\n             thirdTarget: true,\n             hasAchievedFirstTarget: true,\n             hasAchievedSecondTarget: true,\n             hasAchievedThirdTarget: true,\n             message: true\n           }\n         }\n       }\n     })\n\nInvalid value for argument `status`. Expected SIGNALS_STATUS.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.signals.findMany()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:42\n\n  21 console.log(filter);\n  22 if (showRestricted) delete filter.isRestrictedToUnpaidUsers;\n  23 \n→ 24 const signals = await prisma.signals.findMany({\n       where: {\n         type: \"SWINGS\",\n         status: true,\n                 ~~~~\n         isRestrictedToUnpaidUsers: true\n       },\n       take: 10,\n       skip: 0,\n       select: {\n         type: true,\n         status: true,\n         signalCode: {\n           select: {\n             code: true,\n             name: true,\n             image: true\n           }\n         },\n         signalHistory: {\n           take: 1,\n           orderBy: {\n             createdAt: \"desc\"\n           },\n           select: {\n             sellDate: true,\n             buyTarget: true,\n             stopTarget: true,\n             firstTarget: true,\n             secondTarget: true,\n             thirdTarget: true,\n             hasAchievedFirstTarget: true,\n             hasAchievedSecondTarget: true,\n             hasAchievedThirdTarget: true,\n             message: true\n           }\n         }\n       }\n     })\n\nInvalid value for argument `status`. Expected SIGNALS_STATUS.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async getSignals (D:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:24:21)"}
{"level":"error","message":"subscribe error -->  The amount is required.","stack":"Error: The amount is required.\n    at D:\\traders-2.0\\services\\authorize.service.js:82:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"clientVersion":"5.5.0","level":"error","message":"subscribe error -->  \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\billing.controllers.js:54:24\n\n  51 \n  52 const authorizeResponse = await createSubscription(data);\n  53 \n→ 54 await prisma.users.update({\n       where: {\n         id: 6\n       },\n       data: {\n         subscription: {\n           update: {\n             status: \"ACTIVE\",\n             type: \"MONTHLY\",\n             customerId: \"515249857\"\n                         ~~~~~~~~~~~\n           }\n         },\n         userSubscriptionIds: {\n           create: {\n             subscriptionId: \"9009609\"\n           }\n         }\n       }\n     })\n\nArgument `customerId`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.users.update()` invocation in\nD:\\traders-2.0\\controllers\\client\\user\\billing.controllers.js:54:24\n\n  51 \n  52 const authorizeResponse = await createSubscription(data);\n  53 \n→ 54 await prisma.users.update({\n       where: {\n         id: 6\n       },\n       data: {\n         subscription: {\n           update: {\n             status: \"ACTIVE\",\n             type: \"MONTHLY\",\n             customerId: \"515249857\"\n                         ~~~~~~~~~~~\n           }\n         },\n         userSubscriptionIds: {\n           create: {\n             subscriptionId: \"9009609\"\n           }\n         }\n       }\n     })\n\nArgument `customerId`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async subscribe (D:\\traders-2.0\\controllers\\client\\user\\billing.controllers.js:54:5)"}
{"clientVersion":"5.5.0","level":"error","message":"getSignalById error -->  \nInvalid `prisma.signals.findFirst()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:73:41\n\n  70 try {\n  71   const showRestrictedSignals = await hasSubscriptionPeriodRemaining(userId);\n  72 \n→ 73   const signal = await prisma.signals.findFirst({\n         where: {\n           id: \"1\"\n               ~~~\n         },\n         select: {\n           type: true,\n           status: true,\n           isRestrictedToUnpaidUsers: true,\n           signalCode: {\n             select: {\n               code: true,\n               name: true,\n               image: true\n             }\n           },\n           signalHistory: {\n             take: 1,\n             orderBy: {\n               createdAt: \"desc\"\n             },\n             select: {\n               sellDate: true,\n               buyTarget: true,\n               stopTarget: true,\n               firstTarget: true,\n               secondTarget: true,\n               thirdTarget: true,\n               hasAchievedFirstTarget: true,\n               hasAchievedSecondTarget: true,\n               hasAchievedThirdTarget: true,\n               message: true\n             }\n           }\n         }\n       })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.signals.findFirst()` invocation in\nD:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:73:41\n\n  70 try {\n  71   const showRestrictedSignals = await hasSubscriptionPeriodRemaining(userId);\n  72 \n→ 73   const signal = await prisma.signals.findFirst({\n         where: {\n           id: \"1\"\n               ~~~\n         },\n         select: {\n           type: true,\n           status: true,\n           isRestrictedToUnpaidUsers: true,\n           signalCode: {\n             select: {\n               code: true,\n               name: true,\n               image: true\n             }\n           },\n           signalHistory: {\n             take: 1,\n             orderBy: {\n               createdAt: \"desc\"\n             },\n             select: {\n               sellDate: true,\n               buyTarget: true,\n               stopTarget: true,\n               firstTarget: true,\n               secondTarget: true,\n               thirdTarget: true,\n               hasAchievedFirstTarget: true,\n               hasAchievedSecondTarget: true,\n               hasAchievedThirdTarget: true,\n               message: true\n             }\n           }\n         }\n       })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.\n    at En (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async getSignalById (D:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:73:20)"}
{"level":"error","message":"getSignalById error -->  Cannot read properties of null (reading 'isRestrictedToUnpaidUsers')","stack":"TypeError: Cannot read properties of null (reading 'isRestrictedToUnpaidUsers')\n    at getSignalById (D:\\traders-2.0\\controllers\\client\\signals\\signal.controllers.js:109:16)"}
{"clientVersion":"5.5.0","level":"error","message":"updateViewStatusToSeen error -->  \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {},\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {},\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
{"clientVersion":"5.5.0","level":"error","message":"updateViewStatusToSeen error -->  \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
{"clientVersion":"5.5.0","level":"error","message":"updateViewStatusToSeen error -->  \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.upsert()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:123:41

  120 try {
  121   await prisma.$transaction(
  122     notificationIds.map((id) =>
→ 123       prisma.userNotificationsHistory.upsert({
              where: {
                userId: 6,
                notificationId: 474,
            ?   id?: Int,
            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   OR?: UserNotificationsHistoryWhereInput[],
            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   hasRead?: BoolFilter | Boolean,
            ?   hasDeleted?: BoolFilter | Boolean,
            ?   user?: UsersRelationFilter | UsersWhereInput,
            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput
              },
              update: {
                hasRead: false
              },
              create: {
                userId: 6,
                notificationId: 474
              }
            })

Argument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"clientVersion":"5.5.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
{"clientVersion":"5.5.0","level":"\u001b[31merror\u001b[39m","message":"updateViewStatusToSeen error -->  \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.upsert()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:123:41

  120 try {
  121   await prisma.$transaction(
  122     notificationIds.map((id) =>
→ 123       prisma.userNotificationsHistory.upsert({
              where: {
                userId: 6,
                notificationId: 474,
            ?   id?: Int,
            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   OR?: UserNotificationsHistoryWhereInput[],
            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   hasRead?: BoolFilter | Boolean,
            ?   hasDeleted?: BoolFilter | Boolean,
            ?   user?: UsersRelationFilter | UsersWhereInput,
            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput
              },
              update: {
                hasRead: false
              },
              create: {
                userId: 6,
                notificationId: 474
              }
            })

Argument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"clientVersion":"5.5.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.upsert()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:123:41

  120 try {
  121   await prisma.$transaction(
  122     notificationIds.map((id) =>
→ 123       prisma.userNotificationsHistory.upsert({
              where: {
                userId: 6,
                notificationId: 474,
            ?   id?: Int,
            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   OR?: UserNotificationsHistoryWhereInput[],
            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   hasRead?: BoolFilter | Boolean,
            ?   hasDeleted?: BoolFilter | Boolean,
            ?   user?: UsersRelationFilter | UsersWhereInput,
            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput
              },
              update: {
                hasRead: false
              },
              create: {
                userId: 6,
                notificationId: 474
              }
            })

Argument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"clientVersion":"5.5.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
{"clientVersion":"5.5.0","level":"\u001b[31merror\u001b[39m","message":"updateViewStatusToSeen error -->  \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.upsert()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:123:41

  120 try {
  121   await prisma.$transaction(
  122     notificationIds.map((id) =>
→ 123       prisma.userNotificationsHistory.upsert({
              where: {
                userId: 6,
                notificationId: 474,
            ?   id?: Int,
            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   OR?: UserNotificationsHistoryWhereInput[],
            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],
            ?   hasRead?: BoolFilter | Boolean,
            ?   hasDeleted?: BoolFilter | Boolean,
            ?   user?: UsersRelationFilter | UsersWhereInput,
            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput
              },
              update: {
                hasRead: false
              },
              create: {
                userId: 6,
                notificationId: 474
              }
            })

Argument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"clientVersion":"5.5.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.upsert()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:123:41\n\n  120 try {\n  121   await prisma.$transaction(\n  122     notificationIds.map((id) =>\n→ 123       prisma.userNotificationsHistory.upsert({\n              where: {\n                userId: 6,\n                notificationId: 474,\n            ?   id?: Int,\n            ?   AND?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   OR?: UserNotificationsHistoryWhereInput[],\n            ?   NOT?: UserNotificationsHistoryWhereInput | UserNotificationsHistoryWhereInput[],\n            ?   hasRead?: BoolFilter | Boolean,\n            ?   hasDeleted?: BoolFilter | Boolean,\n            ?   user?: UsersRelationFilter | UsersWhereInput,\n            ?   notification?: NotificationsRelationFilter | NotificationsWhereInput\n              },\n              update: {\n                hasRead: false\n              },\n              create: {\n                userId: 6,\n                notificationId: 474\n              }\n            })\n\nArgument `where` of type UserNotificationsHistoryWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43

  124     notificationId: id,
  125   };
  126 });
→ 127 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n\n  124     notificationId: id,\n  125   };\n  126 });\n→ 127 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation:


Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation:\n\n\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
undefined
undefined
{
  name: 'PrismaClientKnownRequestError',
  code: 'P2003',
  clientVersion: '5.5.0',
  meta: {
    field_name: 'UserNotificationsHistory_notificationId_fkey (index)'
  },
  level: 'error',
  message: 'updateViewStatusToSeen error -->  \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`',
  stack: 'PrismaClientKnownRequestError: \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n' +
    '    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n' +
    '    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n' +
    '    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n' +
    '    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n' +
    '    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)'
}
{
  name: 'PrismaClientKnownRequestError',
  code: 'P2003',
  clientVersion: '5.5.0',
  meta: {
    field_name: 'UserNotificationsHistory_notificationId_fkey (index)'
  },
  level: 'error',
  message: 'updateViewStatusToSeen error -->  \n' +
    'Invalid `prisma.userNotificationsHistory.createMany()` invocation in\n' +
    'D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n' +
    '\n' +
    '  124     notificationId: id,\n' +
    '  125   };\n' +
    '  126 });\n' +
    '→ 127 await prisma.userNotificationsHistory.createMany(\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`',
  stack: 'PrismaClientKnownRequestError: \n' +
    'Invalid `prisma.userNotificationsHistory.createMany()` invocation in\n' +
    'D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n' +
    '\n' +
    '  124     notificationId: id,\n' +
    '  125   };\n' +
    '  126 });\n' +
    '→ 127 await prisma.userNotificationsHistory.createMany(\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n' +
    '    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n' +
    '    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n' +
    '    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n' +
    '    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n' +
    '    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)'
}
{
  name: 'PrismaClientKnownRequestError',
  code: 'P2003',
  clientVersion: '5.5.0',
  meta: {
    field_name: 'UserNotificationsHistory_notificationId_fkey (index)'
  },
  level: 'error',
  message: 'updateViewStatusToSeen error -->  \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`',
  stack: 'PrismaClientKnownRequestError: \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n' +
    '    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n' +
    '    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n' +
    '    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n' +
    '    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n' +
    '    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)'
}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
error: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43

  124     notificationId: id,
  125   };
  126 });
→ 127 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{
  name: 'PrismaClientKnownRequestError',
  code: 'P2003',
  clientVersion: '5.5.0',
  meta: {
    field_name: 'UserNotificationsHistory_notificationId_fkey (index)'
  },
  level: 'error',
  message: 'updateViewStatusToSeen error -->  \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`',
  stack: 'PrismaClientKnownRequestError: \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n' +
    '    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n' +
    '    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n' +
    '    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n' +
    '    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n' +
    '    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)'
}
{
  name: 'PrismaClientKnownRequestError',
  code: 'P2003',
  clientVersion: '5.5.0',
  meta: {
    field_name: 'UserNotificationsHistory_notificationId_fkey (index)'
  },
  level: 'error',
  message: 'updateViewStatusToSeen error -->  \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`',
  stack: 'PrismaClientKnownRequestError: \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n' +
    '    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n' +
    '    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n' +
    '    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n' +
    '    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n' +
    '    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)'
}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43

  124     notificationId: id,
  125   };
  126 });
→ 127 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n\n  124     notificationId: id,\n  125   };\n  126 });\n→ 127 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation:


Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation:\n\n\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43

  124     notificationId: id,
  125   };
  126 });
→ 127 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n\n  124     notificationId: id,\n  125   };\n  126 });\n→ 127 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{
  name: 'PrismaClientKnownRequestError',
  code: 'P2003',
  clientVersion: '5.5.0',
  meta: {
    field_name: 'UserNotificationsHistory_notificationId_fkey (index)'
  },
  level: 'error',
  message: 'updateViewStatusToSeen error -->  \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`',
  stack: 'PrismaClientKnownRequestError: \n' +
    '\x1B[31mInvalid \x1B[1m`prisma.userNotificationsHistory.createMany()`\x1B[22m invocation in\x1B[39m\n' +
    '\x1B[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\x1B[24m\n' +
    '\n' +
    '  \x1B[2m\x1B[90m124\x1B[39m     notificationId\x1B[34m:\x1B[39m id\x1B[34m,\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m125\x1B[39m   \x1B[34m}\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '  \x1B[2m\x1B[90m126\x1B[39m \x1B[34m}\x1B[39m\x1B[34m)\x1B[39m\x1B[34m;\x1B[39m\x1B[22m\n' +
    '\x1B[1m\x1B[31m→\x1B[39m\x1B[22m \x1B[2m\x1B[90m127\x1B[39m \x1B[36mawait\x1B[39m prisma\x1B[34m.\x1B[39muserNotificationsHistory\x1B[34m.\x1B[39m\x1B[36mcreateMany\x1B[39m\x1B[34m(\x1B[39m\x1B[22m\n' +
    'Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n' +
    '    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n' +
    '    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n' +
    '    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n' +
    '    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n' +
    '    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)'
}
error: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
{"clientVersion":"5.5.0","code":"P2003","level":"error","message":"updateViewStatusToSeen error -->  \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43[24m

  [2m[90m124[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m125[39m   [34m}[39m[34m;[39m[22m
  [2m[90m126[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m127[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\u001b[24m\n\n  \u001b[2m\u001b[90m124\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m125\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m126\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m127\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation:


Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation:\n\n\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43

  124     notificationId: id,
  125   };
  126 });
→ 127 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n\n  124     notificationId: id,\n  125   };\n  126 });\n→ 127 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:127:43

  124     notificationId: id,
  125   };
  126 });
→ 127 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:43\n\n  124     notificationId: id,\n  125   };\n  126 });\n→ 127 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:127:5)"}
[31merror[39m: updateViewStatusToRead error -->  
Invalid `prisma.userNotificationsHistory.updateMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:144:43

  141 const { notificationId } = req.params;
  142 const { userId } = req.user;
  143 try {
→ 144   await prisma.userNotificationsHistory.updateMany({
          where: {
            userId: 6,
            notificationId: "156"
                            ~~~~~
          },
          data: {
            hasRead: true
          }
        })

Argument `notificationId`: Invalid value provided. Expected IntFilter or Int, provided String. {"clientVersion":"5.5.0","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.userNotificationsHistory.updateMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:144:43\n\n  141 const { notificationId } = req.params;\n  142 const { userId } = req.user;\n  143 try {\n→ 144   await prisma.userNotificationsHistory.updateMany({\n          where: {\n            userId: 6,\n            notificationId: \"156\"\n                            ~~~~~\n          },\n          data: {\n            hasRead: true\n          }\n        })\n\nArgument `notificationId`: Invalid value provided. Expected IntFilter or Int, provided String.\n    at En (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:116:5888)\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6516)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToRead (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:144:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:133:43\n\n  130     notificationId: id,\n  131   };\n  132 });\n→ 133 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:133:5)"}
[31merror[39m: updateViewStatusToSeen error -->  
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.userNotificationsHistory.createMany()` invocation in\nD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:133:43\n\n  130     notificationId: id,\n  131   };\n  132 });\n→ 133 await prisma.userNotificationsHistory.createMany(\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:133:5)"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:132:43

  129     userId,
  130   };
  131 });
→ 132 await prisma.userNotificationsHistory.createMany({
        data: [
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          }
        ]
      })

Argument `notificationId` is missing. {"clientVersion":"5.5.0","name":"PrismaClientValidationError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: updateViewStatusToSeen error -->  
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \n\u001b[31mInvalid \u001b[1m`prisma.userNotificationsHistory.createMany()`\u001b[22m invocation in\u001b[39m\n\u001b[4mD:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:133:43\u001b[24m\n\n  \u001b[2m\u001b[90m130\u001b[39m     notificationId\u001b[34m:\u001b[39m id\u001b[34m,\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m131\u001b[39m   \u001b[34m}\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n  \u001b[2m\u001b[90m132\u001b[39m \u001b[34m}\u001b[39m\u001b[34m)\u001b[39m\u001b[34m;\u001b[39m\u001b[22m\n\u001b[1m\u001b[31m→\u001b[39m\u001b[22m \u001b[2m\u001b[90m133\u001b[39m \u001b[36mawait\u001b[39m prisma\u001b[34m.\u001b[39muserNotificationsHistory\u001b[34m.\u001b[39m\u001b[36mcreateMany\u001b[39m\u001b[34m(\u001b[39m\u001b[22m\nForeign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)`\n    at Cn.handleRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (D:\\inl projects\\traders-2.0\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)\n    at async updateViewStatusToSeen (D:\\inl projects\\traders-2.0\\controllers\\client\\notifications\\notification.controllers.js:133:5)"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43[24m

  [2m[90m130[39m     notificationId[34m:[39m id[34m,[39m[22m
  [2m[90m131[39m   [34m}[39m[34m;[39m[22m
  [2m[90m132[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m133[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
[31mInvalid [1m`prisma.userNotificationsHistory.createMany()`[22m invocation in[39m
[4mD:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:132:43[24m

  [2m[90m129[39m     userId[34m,[39m[22m
  [2m[90m130[39m   [34m}[39m[34m;[39m[22m
  [2m[90m131[39m [34m}[39m[34m)[39m[34m;[39m[22m
[1m[31m→[39m[22m [2m[90m132[39m [36mawait[39m prisma[34m.[39muserNotificationsHistory[34m.[39m[36mcreateMany[39m[34m([39m[22m{
        data: [
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          }
        ]
      }[2m)[22m

Argument `[32mnotificationId[39m` is missing. {"clientVersion":"5.5.0","name":"PrismaClientValidationError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:132:43

  129     userId,
  130   };
  131 });
→ 132 await prisma.userNotificationsHistory.createMany({
        data: [
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          }
        ]
      })

Argument `notificationId` is missing. {"clientVersion":"5.5.0","name":"PrismaClientValidationError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:132:43

  129     userId,
  130   };
  131 });
→ 132 await prisma.userNotificationsHistory.createMany({
        data: [
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          },
          {
            userId: 6
          }
        ]
      })

Argument `notificationId` is missing. {"clientVersion":"5.5.0","name":"PrismaClientValidationError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:133:43

  130     notificationId: id,
  131   };
  132 });
→ 133 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
[31merror[39m: 
Invalid `prisma.userNotificationsHistory.createMany()` invocation in
D:\inl projects\traders-2.0\controllers\client\notifications\notification.controllers.js:131:43

  128     notificationId: id,
  129   };
  130 });
→ 131 await prisma.userNotificationsHistory.createMany(
Foreign key constraint failed on the field: `UserNotificationsHistory_notificationId_fkey (index)` {"clientVersion":"5.5.0","code":"P2003","meta":{"field_name":"UserNotificationsHistory_notificationId_fkey (index)"},"name":"PrismaClientKnownRequestError"}
